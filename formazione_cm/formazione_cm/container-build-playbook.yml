- name: Build e Run Containers con SSH
  hosts: localhost
  gather_facts: yes
  vars:
    ssh_dir: "{{ playbook_dir }}/.ssh"
    ubuntu_container_path: "{{ playbook_dir }}/containers/ubuntu_ssh"
    alpine_container_path: "{{ playbook_dir }}/containers/alpine_ssh"
    image_tag: "{{ image_tag | default('latest') }}"  # tag dinamico

  tasks:
    - name: Creare cartella .ssh se non esiste
      file:
        path: "{{ ssh_dir }}"
        state: directory
        mode: '0700'

    - name: Crea chiave SSH se non esiste
      community.crypto.openssh_keypair:
        path: "{{ ssh_dir }}/id_rsa"
        type: rsa
        size: 2048

    - name: Leggere chiave pubblica
      slurp:
        src: "{{ ssh_dir }}/id_rsa.pub"
      register: ssh_key_content

    - name: Build container Ubuntu SSH
      community.docker.docker_image:
        name: "ubuntu_ssh:{{ image_tag }}"
        source: build
        build:
          path: "{{ ubuntu_container_path }}"
          dockerfile: Dockerfile
          args:
            SSH_PUB_KEY: "{{ ssh_key_content.content | b64decode }}"
        state: present

    - name: Build container Alpine SSH
      community.docker.docker_image:
        name: "alpine_ssh:{{ image_tag }}"
        source: build
        build:
          path: "{{ alpine_container_path }}"
          dockerfile: Dockerfile
          args:
            SSH_PUB_KEY: "{{ ssh_key_content.content | b64decode }}"
        state: present

    - name: Run Ubuntu container
      community.docker.docker_container:
        name: "ubuntu_ssh_{{ image_tag }}"
        image: "ubuntu_ssh:{{ image_tag }}"
        state: started
        ports:
          - "22{{ image_tag }}:22"
        restart_policy: unless-stopped

    - name: Run Alpine container
      community.docker.docker_container:
        name: "alpine_ssh_{{ image_tag }}"
        image: "alpine_ssh:{{ image_tag }}"
        state: started
        ports:
          - "23{{ image_tag }}:22"
        restart_policy: unless-stopped

